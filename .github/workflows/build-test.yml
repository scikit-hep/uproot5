name: Test build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        env: [py38, py310, py312]
        include:
          - platform: ubuntu-latest
            env: root310

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Get Pixi
        uses: prefix-dev/setup-pixi@v0.5.1
        with:
          pixi-version: v0.18.0
          manifest-path: pyproject.toml
          cache: false
          environments: ${{ matrix.env }}

      - name: Install sshd for fsspec ssh tests
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y openssh-server
          sudo service ssh restart
          ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          chmod og-wx ~/.ssh/authorized_keys
          ssh-keyscan -H localhost >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no localhost echo "ssh connection successful"

      - name: Run tests
        run: pixi run -e ${{ matrix.env }} test


  vanilla-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.11']

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pip install the package
        run: python -m pip install .[test,dev]

      - name: Run pytest
        run: |
          python -m pytest -vv tests --reruns 10 --reruns-delay 30 --only-rerun "(?i)http|ssl|timeout|expired|connection|socket"
